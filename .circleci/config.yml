# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/deptaskapp
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.0-node
         enviroment:
           PGHOST: 127.0.0.1
           PGUSER: ubuntu
           RAILS_ENV: test
      # Specify service dependencies here if necessar
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:9.5-alpine
         environment:
           POSTGRES_USER: ubuntu
           POSTGRES_DB: deptaskapp_test 
           POSTGRES_PASSWORD: ""


    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle


      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      
      - run:
          name: install client
          command: |
            sudo apt-get update
            sudo apt install -y postgresql-client || true
        
      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m


      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace &&
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/deptaskapp_test"

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results